version: '3.8'

networks:
  genealogy:
    driver: bridge

services:
  # go-app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: genealogy_app
  #   ports:
  #     - "9999:9999"
  #   depends_on:
  #     family-tree-db:
  #       condition: service_healthy
  #     family-tree-redis:
  #       condition: service_healthy
  #   environment:
  #     - PG_HOST=family-tree-db
  #     - PG_USERNAME=${PG_USERNAME}
  #     - PG_PASSWORD=${PG_PASSWORD}
  #     - PG_DB_NAME=${PG_DB_NAME}
  #     - REDIS_HOST=family-tree-redis
  #     - REDIS_PASSWORD=${REDIS_PASSWORD}
  #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  #     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  #     - AWS_REGION=${AWS_REGION}
  #     - S3_BUCKET_NAME=${S3_BUCKET_NAME}
  #     - CLOUDFRONT_DISTRIBUTION_ID=${CLOUDFRONT_DISTRIBUTION_ID}
  #     - CLOUDFRONT_DOMAIN=${CLOUDFRONT_DOMAIN}
  #     - EB_APPLICATION_NAME=${EB_APPLICATION_NAME}
  #     - EB_ENVIRONMENT_NAME=${EB_ENVIRONMENT_NAME}
  #   restart: always
  #   networks:
  #     - genealogy

  genealogy-db:
    image: postgres:14-alpine
    container_name: genealogy-db
    environment:
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB_NAME}
    ports:
      - "${PG_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USERNAME} -d ${PG_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - genealogy

  genealogy-db-test:
    image: postgres:14-alpine
    container_name: genealogy-db-test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret123test
      POSTGRES_DB: genealogy_test
    ports:
      - "5439:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d genealogy_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - genealogy

  genealogy-redis:
    image: bitnami/redis:latest
    container_name: genealogy-redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - genealogy
  genealogy-prometheus:
    container_name: genealogy-prometheus
    image: prom/prometheus
    restart: always
    extra_hosts:
      - host.docker.internal:host-gateway
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    # volumes:
    #   - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  genealogy-grafana:
    container_name: genealogy-grafana
    image: grafana/grafana
    ports:
      - "3000:3000"

