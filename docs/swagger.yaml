definitions:
  model.GeneralResponse:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.Role:
    properties:
      id:
        type: string
      name:
        type: string
    required:
    - id
    - name
    type: object
  model.RoleRequest:
    properties:
      id:
        type: string
      name:
        type: string
    required:
    - id
    - name
    type: object
  model.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      family_tree_id:
        type: integer
      id:
        type: string
      is_active:
        type: boolean
      password:
        type: string
      updated_at:
        type: string
    type: object
  model.UserRequest:
    properties:
      email:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      roles:
        items:
          $ref: '#/definitions/model.Role'
        type: array
    required:
    - email
    - id
    - is_active
    - roles
    type: object
info:
  contact: {}
  description: |-
    [ Base URL : http://localhost:9999/v1/api ]
    This API using combination JWT & HMAC Authentication
    Generate Here https://www.devglan.com/online-tools/hmac-sha256-online
    Convert UNIXMilis Here https://www.unixtimestamp.com/
  title: Genealogy API
  version: "1.0"
paths:
  /v1/api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return user information with JWT token
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.GeneralResponse'
      summary: Authenticate user
      tags:
      - Authentication
  /v1/api/role:
    post:
      consumes:
      - application/json
      description: Create a new role
      parameters:
      - description: Role data
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            allOf:
            - $ref: '#/definitions/model.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.RoleRequest'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.GeneralResponse'
      summary: Create a new role
      tags:
      - Roles
  /v1/api/role/:id:
    delete:
      consumes:
      - application/json
      description: Delete a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.GeneralResponse'
      summary: Delete a role
      tags:
      - Roles
    get:
      consumes:
      - application/json
      description: Get role by id
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            allOf:
            - $ref: '#/definitions/model.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.Role'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.GeneralResponse'
      summary: Get role by id
      tags:
      - Roles
    put:
      consumes:
      - application/json
      description: Update a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Role data
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            allOf:
            - $ref: '#/definitions/model.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.RoleRequest'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.GeneralResponse'
      summary: Update a role
      tags:
      - Roles
  /v1/api/roles:
    get:
      consumes:
      - application/json
      description: Get all existing roles
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            allOf:
            - $ref: '#/definitions/model.GeneralResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.User'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.GeneralResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all existing roles
      tags:
      - Roles
  /v1/api/user:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            allOf:
            - $ref: '#/definitions/model.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.UserRequest'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.GeneralResponse'
      summary: Create a new user
      tags:
      - Users
  /v1/api/user/:id:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.GeneralResponse'
      summary: Delete a user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            allOf:
            - $ref: '#/definitions/model.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.GeneralResponse'
      summary: Get user by id
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            allOf:
            - $ref: '#/definitions/model.GeneralResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.UserRequest'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.GeneralResponse'
      summary: Update a user
      tags:
      - Users
  /v1/api/users:
    get:
      consumes:
      - application/json
      description: Get all existing users
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            allOf:
            - $ref: '#/definitions/model.GeneralResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.User'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.GeneralResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.GeneralResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all existing users
      tags:
      - Users
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
